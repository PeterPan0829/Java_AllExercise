package Java_ArrayDataStructure;
/*
    此為詳細介紹陣列 "資料結構" 範例‧
    
    資料大多是由多筆紀錄所構成，每筆資料再利用 N 個欄位來描述其意思（後續會再補充說明）。
    我們也可以利用二維陣列來儲存資料， 陣列中每一行代表一筆紀錄，每行裡包含 N 個欄位（列）存放某一特殊訊息，這就是陣列資料結構的架構。
    陣列資料結構最大的缺點是所有元素都必須是相同的資料型態；當然還有其他表示法，以後再詳細介紹。
    我們用一般學生成績檔案為範例，來說明陣列資料結構的處理過程，下圖所示。每一行儲存一筆學生資料，每行有 6 個欄位（6 列），
    分別存放學生學號、程式設計、資訊網路、資料處理、統計分析、以及總平均分數。
    
    範例：張老師利用二維陣列 score[][] = {{492101, 80, 90, 78, 72, 0}, {492102, 90, 67, 54, 46, 0}, {492103, 71, 64, 83, 53, 0}, {492104, 68, 89, 73, 73, 0}, {492105, 56, 72, 53, 49, 0}, {492106, 96, 65, 78, 83, 0}, {492107, 49, 62, 91, 68, 0}}
    存放該班的學生成績資料，每筆資料為 {學號、程式設計、資訊網路、資料處理、統計分析、總平均}。
    請計算每一位同學的總平均分數，再列印出所有成績資料。
    
    
 */


public class Array_DataStructure {
    public static void main(String[] args) {
        
        int score[][] = {{492101, 80, 90, 78, 72, 0},
                        {492102, 90, 67, 54, 46, 0},
                        {492103, 71, 64, 83, 53, 0},
                        {492104, 68, 89, 73, 73, 0},
                        {492105, 56, 72, 53, 49, 0},
                        {492106, 96, 65, 78, 83, 0},
                        {492107, 49, 62, 91, 68, 0}};
        
        // 計算每位學生的總平均分數
        for (int i=0; i<score.length; i++){
            score[i][5] = (score[i][1] + score[i][2] + score[i][3] + score[i][4]) / 4;
        }
    
        // 列印所有學生成績資料
        System.out.printf(" 學號　　　　 程式設計　　資訊網路　　資料處理　　統計分析　   總平均\n");
        
        // 第一個迴圈跑總共幾筆資料 i 指標, 每筆資料的欄位用　j 指標
        for (int i=0; i<score.length; i++){
            for (int j=0; j<score[i].length; j++){
                System.out.printf("%d\t\t\t",score[i][j]);
            }
            System.out.printf("\n");
        }
        
    }
}
